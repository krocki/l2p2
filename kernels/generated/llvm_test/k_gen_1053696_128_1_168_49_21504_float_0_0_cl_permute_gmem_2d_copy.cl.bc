	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 10
	.globl	_k_gen_1053696_128_1_168_49_21504_float_0_0_cl_permute_gmem_2d_copy
	.align	4, 0x90
_k_gen_1053696_128_1_168_49_21504_float_0_0_cl_permute_gmem_2d_copy: ## @k_gen_1053696_128_1_168_49_21504_float_0_0_cl_permute_gmem_2d_copy
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp0:
	.cfi_def_cfa_offset 16
Ltmp1:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp2:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%eax, %eax
	movq	%rdi, -8(%rbp)          ## 8-byte Spill
	movl	%eax, %edi
	movb	$0, %al
	movq	%rsi, -16(%rbp)         ## 8-byte Spill
	movq	%rdx, -24(%rbp)         ## 8-byte Spill
	callq	_get_global_id
	movl	$1, %edi
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	movb	$0, %al
	callq	_get_global_size
	movl	$1, %edi
	movl	-28(%rbp), %ecx         ## 4-byte Reload
	imull	%ecx, %eax
	movl	%eax, -32(%rbp)         ## 4-byte Spill
	movb	$0, %al
	callq	_get_global_id
	movl	-32(%rbp), %ecx         ## 4-byte Reload
	addl	%eax, %ecx
	movslq	%ecx, %rdx
	movq	-16(%rbp), %rsi         ## 8-byte Reload
	movslq	(%rsi,%rdx,4), %r8
	movq	-24(%rbp), %r9          ## 8-byte Reload
	movl	(%r9,%r8,4), %eax
	movq	-8(%rbp), %r10          ## 8-byte Reload
	movl	%eax, (%r10,%rdx,4)
	movl	(%r9,%rdx,4), %eax
	movl	%eax, (%r10,%r8,4)
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc


.subsections_via_symbols
